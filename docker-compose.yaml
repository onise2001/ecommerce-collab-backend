services:
  db:
    image: postgres:13

    env_file:
      - .env

    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    command: gunicorn --config gunicorn_config.py ecommerce.wsgi:application
    volumes:
      - .:/app
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - default

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
      - 8001:8001
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web

    networks:
      - default

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email babulashvili.vaja@gmail.com -d algouni-collab.duckdns.org --agree-tos

  redis:
    image: redis:latest
    expose:
      - 6379
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
# version: '3'

# services:
#   web:
#     build: .
#     command: gunicorn --config gunicorn_config.py ecommerce.wsgi:application
#     volumes:
#       - .:/app
#     expose:
#       - 8000
#     env_file:
#       - .env
#     depends_on:
#       - redis
#     networks:
#       - default

#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:80
#       - 443:443
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#       - ./certs:/etc/letsencrypt
#       - ./certs-dhparams:/etc/ssl/certs/dhparams
#     depends_on:
#       - web
#     networks:
#       - default

#   certbot:
#     image: certbot/certbot
#     volumes:
#       - ./certs:/etc/letsencrypt
#       - ./certs-dhparams:/etc/ssl/certs/dhparams
#     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"

#   redis:
#     image: redis:latest
#     expose:
#       - 6379
#     networks:
#       - default

# networks:
#   default:
#     driver: bridge
